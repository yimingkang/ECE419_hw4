import org.apache.zookeeper.KeeperException;
import org.apache.zookeeper.KeeperException.NodeExistsException;
import org.apache.zookeeper.Watcher.Event.EventType;
import org.apache.zookeeper.WatchedEvent;
import org.apache.zookeeper.Watcher;
import org.apache.zookeeper.ZooKeeper;
import org.apache.zookeeper.CreateMode;
import org.apache.zookeeper.ZooDefs.Ids;

import java.io.IOException;
import java.util.concurrent.CountDownLatch;

public class JobTracker {
    
    public static String myPath = "/JobTracker";
    public static ZooKeeper zk;
    public static boolean isPrimary;
    
    public static void main(String[] args) {
        
        if (args.length != 1) {
            System.out.println("Usage: java -classpath lib/zookeeper-3.3.2.jar:lib/log4j-1.2.15.jar:. A zkServer:clientPort");
            return;
        }

        ZkConnector zkc = new ZkConnector();
        
        try {
            zkc.connect(args[0]);
        } catch(Exception e) {
            System.out.println("Zookeeper connect "+ e.getMessage());
        }

        zk = zkc.getZooKeeper();

        try {
            System.out.println("Creating " + myPath);
            zk.create(
                myPath,         	   // Path of znode
                null,           	   // Data not needed.
                Ids.OPEN_ACL_UNSAFE,   // ACL, set to Completely Open.
                CreateMode.EPHEMERAL   // Znode type, set to EPHEMERAL for failure detection
            );
        } catch(NodeExistsException e) {
        	// here we create a wacher
        	System.out.println("Backup JobTracker started");
        	isPrimary = false;
            try {
				zk.exists(
				        myPath, 
				        new Watcher() {       // Anonymous Watcher
				            @Override
				            public void process(WatchedEvent event) {
				                // check for event type NodeCreated
				                boolean isNodeDeleted = event.getType().equals(EventType.NodeDeleted);
				                
				                // verify if this is the defined znode
				                boolean isMyPath = event.getPath().equals(myPath);
				                if (isNodeDeleted && isMyPath) {
				                	isPrimary = true;
				                    System.out.println("Primary JobTracker has died, taking over as Primary");
				                    try {
										zk.create(
										    myPath,         	   // Path of znode
										    null,           	   // Data not needed.
										    Ids.OPEN_ACL_UNSAFE,   // ACL, set to Completely Open.
										    CreateMode.EPHEMERAL   // Znode type, set to EPHEMERAL for failure detection
										);
									} catch (KeeperException | InterruptedException e) {
										// TODO Auto-generated catch block
										e.printStackTrace();
									}
				                }
				            }
				        });
			} catch (KeeperException | InterruptedException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
        	
            System.out.println(e.code());
        } catch(Exception e) {
            System.out.println("Make node:" + e.getMessage());
        }
        isPrimary = true;
    	System.out.println("Primary JobTracker started");
    }
}
