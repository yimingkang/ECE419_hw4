import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Logger;

public class FileServer extends PBArchitecture {
	private static int nPartitions = 27;
	private static int partitionSize = 10000;
	public static boolean MOCK = true;	
	public static List<String> dictionary;

    public static void main(String[] args) throws IOException, ClassNotFoundException {
    	
        pbPath = "/FileServer";
        logger = Logger.getLogger(JobTracker.class.getName());
    	
        if (args.length != 2) {
            System.out.println("Usage: java -classpath lib/zookeeper-3.3.2.jar:lib/log4j-1.2.15.jar:. A zkServer:clientPort");
            return;
        }
        
        // Connect to ZooKeeper, load dictionary and affirm leadership
        connectZK(args[0]);
        try{
        	loadDictionary(args[1]);
        }catch(FileNotFoundException e){
        	logger.severe("Unable to load dictionary file " + args[1]);
        	System.exit(-1);
        }
        affirmPrimary();
        
        
        // Wait for connection
    }
    
    List<String> getPartition(int partitionID){
    	List<String> partition = new ArrayList(dictionary.subList(0, dictionary.size()))
    }
    
    public static void loadDictionary(String filePath) throws FileNotFoundException{
    	dictionary = new ArrayList<String>();
    	Scanner dictScanner = new Scanner(new File(filePath));
    	while (dictScanner.hasNext()){
    		dictionary.add(dictScanner.next());
    	}
    	dictScanner.close();
    }

}
